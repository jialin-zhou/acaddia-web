// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "columnheaders.h"

// Dispatch interfaces referenced by this interface
#include "columnheader.h"


/////////////////////////////////////////////////////////////////////////////
// CColumnHeaders properties

/////////////////////////////////////////////////////////////////////////////
// CColumnHeaders operations

long CColumnHeaders::GetCount()
{
	long result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CColumnHeaders::SetCount(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CColumnHeader CColumnHeaders::Add(VARIANT* Index, VARIANT* Key, VARIANT* Text, VARIANT* Width, VARIANT* Alignment)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_PVARIANT VTS_PVARIANT VTS_PVARIANT VTS_PVARIANT VTS_PVARIANT;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		Index, Key, Text, Width, Alignment);
	return CColumnHeader(pDispatch);
}

void CColumnHeaders::Clear()
{
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CColumnHeader CColumnHeaders::GetItem(VARIANT* Index)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_PVARIANT;
	InvokeHelper(0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		Index);
	return CColumnHeader(pDispatch);
}

void CColumnHeaders::Remove(VARIANT* Index)
{
	static BYTE parms[] =
		VTS_PVARIANT;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Index);
}

LPUNKNOWN CColumnHeaders::_NewEnum()
{
	LPUNKNOWN result;
	InvokeHelper(0xfffffffc, DISPATCH_METHOD, VT_UNKNOWN, (void*)&result, NULL);
	return result;
}
