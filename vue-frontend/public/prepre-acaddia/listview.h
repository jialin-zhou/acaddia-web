#if !defined(AFX_LISTVIEW_H__5BE6194F_0069_48FA_B8D7_F4B18DF8630A__INCLUDED_)
#define AFX_LISTVIEW_H__5BE6194F_0069_48FA_B8D7_F4B18DF8630A__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CColumnHeaders;
class CListItem;
class CListItems;
class CPicture;
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CListView1 wrapper class

class CListView1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CListView1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x58da8d8a, 0x9d6a, 0x101b, { 0xaf, 0xc0, 0x42, 0x10, 0x10, 0x2a, 0x8d, 0xa7 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	long GetArrange();
	void SetArrange(long nNewValue);
	CColumnHeaders GetColumnHeaders();
	void SetColumnHeaders(LPDISPATCH newValue);
	CListItem GetDropHighlight();
	void SetRefDropHighlight(LPDISPATCH newValue);
	void SetDropHighlight(VARIANT* newValue);
	BOOL GetHideColumnHeaders();
	void SetHideColumnHeaders(BOOL bNewValue);
	BOOL GetHideSelection();
	void SetHideSelection(BOOL bNewValue);
	LPDISPATCH GetIcons();
	void SetRefIcons(LPDISPATCH newValue);
	void SetIcons(LPDISPATCH newValue);
	CListItems GetListItems();
	void SetListItems(LPDISPATCH newValue);
	long GetLabelEdit();
	void SetLabelEdit(long nNewValue);
	BOOL GetLabelWrap();
	void SetLabelWrap(BOOL bNewValue);
	CPicture GetMouseIcon();
	void SetMouseIcon(LPDISPATCH newValue);
	void SetRefMouseIcon(LPDISPATCH newValue);
	long GetMousePointer();
	void SetMousePointer(long nNewValue);
	BOOL GetMultiSelect();
	void SetMultiSelect(BOOL bNewValue);
	CListItem GetSelectedItem();
	void SetRefSelectedItem(LPDISPATCH newValue);
	void SetSelectedItem(VARIANT* newValue);
	LPDISPATCH GetSmallIcons();
	void SetRefSmallIcons(LPDISPATCH newValue);
	void SetSmallIcons(LPDISPATCH newValue);
	BOOL GetSorted();
	void SetSorted(BOOL bNewValue);
	short GetSortKey();
	void SetSortKey(short nNewValue);
	long GetSortOrder();
	void SetSortOrder(long nNewValue);
	long GetView();
	void SetView(long nNewValue);
	long GetOLEDragMode();
	void SetOLEDragMode(long nNewValue);
	long GetOLEDropMode();
	void SetOLEDropMode(long nNewValue);
	long GetAppearance();
	void SetAppearance(long nNewValue);
	unsigned long GetBackColor();
	void SetBackColor(unsigned long newValue);
	long GetBorderStyle();
	void SetBorderStyle(long nNewValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	COleFont GetFont();
	void SetRefFont(LPDISPATCH newValue);
	unsigned long GetForeColor();
	void SetForeColor(unsigned long newValue);
	long GetHWnd();
	void SetHWnd(long nNewValue);
	CListItem FindItem(LPCTSTR sz, VARIANT* Where, VARIANT* Index, VARIANT* fPartial);
	CListItem GetFirstVisible();
	CListItem HitTest(float x, float y);
	void StartLabelEdit();
	void OLEDrag();
	void Refresh();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_LISTVIEW_H__5BE6194F_0069_48FA_B8D7_F4B18DF8630A__INCLUDED_)
